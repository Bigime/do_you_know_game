# -*- coding: utf-8 -*-
"""toyproject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bObhksN6jpL0H8jOYjxjJmdef4wehC9e

## 게임 만들기
"""

import pandas as pd
filename = 'final_output.xlsx'

df = pd.read_excel(filename)
df.info()
df

import re

df['키워드_동시등장'] = df['키워드_동시등장'].map(lambda x: re.sub('[^\w\s,\(\)]', '', x))
df['키워드_선정'] = df['키워드_선정'].map(lambda x: re.sub('[^\w\s,\(\)]', '', x))

df['키워드_동시등장'] = df['키워드_동시등장'].map(lambda x: x.split(','))
df['키워드_선정'] = df['키워드_선정'].map(lambda x: x.split(','))

df

import random

def main_game(level, idx, try_cnt, last_idx):
  name = df.loc[idx, '선수']
  if level == 1:
    keywords = df.loc[idx, '키워드_동시등장']

    while(True):
      keyword_idx = random.randint(0, len(keywords) - 1)
      if keyword_idx != last_idx:
        break
    last_idx = keyword_idx

    print(f'1 단 계 | 도 전 횟 수 {try_cnt} 번 | 남 은 도 전 횟 수 {2 - try_cnt} 번')
    print('=' * 100)
    print(f'KEYWORD : {keywords[keyword_idx]}')

    ans = input("정 답 :")
    if ans == name:
      print('정답입니다 !!')
      reaction = would_you_like_to_try_regame()
      if reaction == 'R':
        return -1, -1
      else:
        return -2, -1
    elif try_cnt < 1:
      print(f'오답입니다. ㅜㅜ {1-try_cnt} 번의 도전 후 자동으로 다음 단계로 이동합니다.')
      print('=' * 100)
      try_cnt += 1
      return try_cnt, keyword_idx
    else:
      print('오답입니다. 자동으로 다음 단계로 이동합니다.')
      print('=' * 100)
      try_cnt += 1
      return try_cnt, -1
  else:
    keywords = df.loc[idx, '키워드_선정']
    while(True):
      keyword_idx = random.randint(0, len(keywords) - 1)
      if keyword_idx != last_idx:
        break
    last_idx = keyword_idx

    print(f'2 단 계 | 도 전 횟 수 {try_cnt} 번 | 남 은 도 전 횟 수 {2 - try_cnt} 번')
    print('=' * 50)
    print(f'KEYWORD : {keywords[keyword_idx]}')

    ans = input("정 답 :")
    if ans == name:
      print('정답입니다 !!')
      reaction = would_you_like_to_try_regame()
      if reaction == 'R':
        return -1, -1
      else:
        return -2, -1
    elif try_cnt < 1:
      print(f'오답입니다. ㅜㅜ {1-try_cnt} 번의 도전 후 자동으로 다음 단계로 이동합니다.')
      try_cnt += 1
      return try_cnt, keyword_idx
    else:
      print(f'오답입니다. 정답은 {name}였습니다.')
      reaction = would_you_like_to_try_regame()
      if reaction == 'R':
        return -1, -1
      else:
        return -2, -1


def would_you_like_to_try_regame():
  while(True):
    reaction = input('게임을 종료합니다. 다시 게임을 하고 싶으시면 R 을 종료하고 싶으시면 Q 를 입력해주세요')
    if reaction == 'R':
      return 'R'
    elif reaction == 'Q':
      return 'Q'
    else:
        print('올바른 형식으로 다시 입력해주세요')

last_player_idx = []
while(True):
  level = 1
  try_cnt = 0

  if len(last_player_idx) == 10:
    print('출제할 수 있는 선수가 없습니다. 게임을 종료합니다.')
    break

  while(True):
    idx = random.randint(0, 9)
    if idx not in last_player_idx:
      last_player_idx.append(idx)
      break

  last_idx = -1

  while(True):
    try_cnt, last_idx = main_game(level, idx, try_cnt, last_idx)
    if try_cnt < 0:
      break;
    elif try_cnt == 1:
      continue
    elif try_cnt == 2:
      level += 1
      try_cnt = 0
    else:
      print('error!!')

  if try_cnt == -1:
    continue
  else:
    break